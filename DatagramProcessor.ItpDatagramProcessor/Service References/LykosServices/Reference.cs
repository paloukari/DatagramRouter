//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Corp.RouterService.Message.DatagramProcessor.WolfServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:CoralParallelRun", ConfigurationName="WolfServices.CoralParallelPortType")]
    public interface CoralParallelPortType {
        
        // CODEGEN: Generating message contract since the operation CoralRequest is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralRequestResponse CoralRequest(Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralRequestRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CoralRequestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:CoralParallelRun", Order=0)]
        public string CoralRequest;
        
        public CoralRequestRequest() {
        }
        
        public CoralRequestRequest(string CoralRequest) {
            this.CoralRequest = CoralRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CoralRequestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:CoralParallelRun", Order=0)]
        public string CoralResult;
        
        public CoralRequestResponse() {
        }
        
        public CoralRequestResponse(string CoralResult) {
            this.CoralResult = CoralResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CoralParallelPortTypeChannel : Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralParallelPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoralParallelPortTypeClient : System.ServiceModel.ClientBase<Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralParallelPortType>, Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralParallelPortType {
        
        public CoralParallelPortTypeClient() {
        }
        
        public CoralParallelPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoralParallelPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoralParallelPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoralParallelPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralRequestResponse Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralParallelPortType.CoralRequest(Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralRequestRequest request) {
            return base.Channel.CoralRequest(request);
        }
        
        public string CoralRequest(string CoralRequest1) {
            Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralRequestRequest inValue = new Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralRequestRequest();
            inValue.CoralRequest = CoralRequest1;
            Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralRequestResponse retVal = ((Corp.RouterService.Message.DatagramProcessor.WolfServices.CoralParallelPortType)(this)).CoralRequest(inValue);
            return retVal.CoralResult;
        }
    }
}
